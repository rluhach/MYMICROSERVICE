name: Django CI

on:
  push:  
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  test:
    runs-on: ubuntu-latest

    needs: build

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          # Replace this with your test command - python3 manage.py test --keepdb
          ls
          pwd
          cd mymicroservice
          python manage.py test
          

  lint:
    runs-on: ubuntu-latest

    needs: [build, test]

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt      

      - name: Lint code
        run: |
          # Replace this with your linting command
          cd mymicroservice
          pylint --errors-only mymicroservice

  sonarqube:
    runs-on: ubuntu-latest

    needs: [build, test, lint]

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'  
    
      - name: Install SonarScanner
        run: |
            export SONAR_SCANNER_VERSION=4.6.0.2311  # Replace with the latest version
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip
            unzip sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip
            echo "export PATH=$PATH:$PWD/sonar-scanner-${SONAR_SCANNER_VERSION}-linux/bin" >> $HOME/.bashrc
            source $HOME/.bashrc

      - name: Debug Info
        run: |
              ls -la $PWD
              echo "PATH: $PATH"
      
      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
        with:
          args:
                  # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
                  # mandatory
                  -Dsonar.projectKey=MYMICROSERVICE
                  -Dsonar.organization=rluhach
